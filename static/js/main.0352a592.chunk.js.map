{"version":3,"sources":["SketchUtils/SketchCell.tsx","SketchUtils/plot.ts","SketchUtils/latex.ts","SketchUtils/p5.ts","Notebook.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SketchCell","start","duration","frameRate","rate","width","height","playButtonSize","autoPlay","loop","code","p","s","setup","draw","t","codeString","showRecordButton","canvasRef","useRef","cellRef","timeSliderRef","saveVideoRef","recorderRef","videoChunks","streamRef","sketchState","prevCodeString","current","useEffect","useState","shouldPlay","setPlay","shouldRecord","setRecord","isRecording","setRecording","record","stopRecording","exportVideo","e","blob","Blob","vid","document","createElement","id","controls","source","src","URL","createObjectURL","type","appendChild","body","play","MediaRecorder","audioBitsPerSecond","videoBitsPerSecond","mimeType","ondataavailable","data","size","console","log","push","onstop","Sketch","timeSlider","time","execCodeString","eval","c","result","error","getFriendlyTime","floor","getFriendlyDuration","formatTimeAndDuration","updateTime","value","html","stop","createCanvas","randomSeed","textSize","noStroke","noLoop","createSlider","style","addClass","parent","createSpan","nextT","myRef","p5Ref","remove","p5","ref","className","onClick","plot2D","prototype","end","xFn","yFn","strokeWeight","preVertex","fraction","this","noFill","beginShape","x","y","curveVertex","endShape","partial","i","lastX","lastY","latex","string","tex","position","katex","render","elt","text","templateProgram","EditorCell","updateOnChange","setCodeString","sketchHeight","editorHeight","mode","theme","name","onChange","debounce","newValue","undefined","onBlur","editor","getValue","defaultValue","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","tabSize","App","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0352a592.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport p5 from './p5';\nimport './slider.scss'\nimport './play-button.scss'\nimport './cell.scss';\ndeclare var MediaRecorder: any;\n\nexport default function SketchCell(\n  {\n    start = 0,\n    duration = 30,\n    frameRate = 60,\n    rate = 1,\n    width= 710,\n    height = 400,\n    playButtonSize = 30,\n    autoPlay = true,\n    loop = false,\n    code = (p: p5, s: any) => ({\n      setup: () => {},\n      draw: (t) => {},\n    }),\n    codeString = \"\",\n  }\n) {\n  const showRecordButton = false;\n  // const recorderRef = useRef(new Recorder());\n  const canvasRef = useRef(null);\n  const cellRef = useRef(null);\n  const timeSliderRef = useRef(null);\n  const saveVideoRef = useRef(null);\n  const recorderRef = useRef(null);\n  const videoChunks = useRef([]);\n  const streamRef = useRef(null);\n\n  const sketchState = useRef({\n    t: 0,\n    start,\n    duration,\n    rate,\n    width,\n    height,\n    loop,\n    autoPlay,\n    codeString,\n    prevCodeString: codeString,\n    frameRate,\n  });\n\n  const s = sketchState.current;\n\n  useEffect(() => {\n    s.start = start;\n    s.duration = duration;\n    s.rate = rate;\n    s.width = width;\n    s.height = height;\n    s.loop = loop;\n    s.autoPlay = autoPlay;\n    s.codeString = codeString;\n    s.frameRate = frameRate;\n  }, [start, duration, rate, width, height, loop, autoPlay, s, codeString, frameRate])\n\n  const [shouldPlay, setPlay] = useState(autoPlay);\n  const [shouldRecord, setRecord] = useState(false);\n  const [isRecording, setRecording] = useState(false);\n\n  const record = () => {\n    setRecord(true);\n    videoChunks.current = [];\n  };\n\n  const stopRecording = () => {\n    setRecord(false);\n  };\n\n  useEffect(() => {\n    if (streamRef.current === null) {\n      return;\n    }\n    if (recorderRef.current == null) {\n      // @ts-ignore\n      recorderRef.current = new MediaRecorder(streamRef.current, {\n        audioBitsPerSecond: 0,\n        videoBitsPerSecond: 2500000,\n        mimeType: 'video/webm',\n      });\n      // @ts-ignore\n      recorderRef.current.ondataavailable = e => {\n        if (e.data.size) {\n          console.log(\"Got chunk\", e.data);\n          // @ts-ignore\n          videoChunks.current.push(e.data);\n        }\n      };\n      // @ts-ignore\n      recorderRef.current.onstop = exportVideo;\n    }\n  });\n\n  function exportVideo(e) {\n    var blob = new Blob(videoChunks.current);\n    var vid = document.createElement('video');\n    vid.id = 'recorded'\n    vid.controls = true;\n    var source = document.createElement('source');\n    source.src = URL.createObjectURL(blob);\n    source.type = blob.type;\n    vid.appendChild(source);\n    document.body.appendChild(vid);\n    vid.play();\n  }\n\n  const Sketch = (p) => {\n\n    let timeSlider;\n    let time;\n    // let countSlider;\n    const execCodeString = (code) => eval(`\n      const __vars = {};\n      for (let m in p) {\n        __vars[m] = p[m];\n      }\n      ${code}\n      const entries = [];\n      for (let m in p) {\n        if (typeof p[m] === 'function' && !__vars[m]) {\n          entries.push([m, p[m]]);\n        }\n      }\n      Object.fromEntries(entries);`\n    );\n\n    const c = s.codeString ? (\n      (() => {\n        try {\n          const result = execCodeString(s.codeString);\n          s.prevCodeString = s.codeString;\n          return result;\n        } catch (e) {\n          console.error(\"Failed to compile.\", e);\n          return execCodeString(s.prevCodeString);\n        }\n      })()\n    ): code(p, s);\n\n    const getFriendlyTime = () => p.floor(s.start + s.t);\n    const getFriendlyDuration = () => p.floor(s.start + s.duration);\n    const formatTimeAndDuration = () => `${getFriendlyTime()} / ${getFriendlyDuration()}`;\n\n    const updateTime = (t) => {\n      timeSlider.value(t);\n      time.html(formatTimeAndDuration());\n    };\n\n    const stop = () => {\n      setPlay(false);\n      if (isRecording) {\n        setRecording(false);\n        // @ts-ignore\n        recorderRef.current.stop();\n      }\n      updateTime(0);\n    };\n\n    p.setup = () => {\n      // create canvas\n      const canvas = p.createCanvas(width, height);\n      // streamRef.current = canvas.elt.captureStream(60)\n      p.randomSeed(1337);\n      p.frameRate(s.frameRate);\n      p.textSize(15);\n      p.noStroke();\n\n      if (!shouldPlay && (timeSlider && timeSlider.value() === s.t)) {\n        p.noLoop();\n      }\n\n      // create sliders\n      timeSlider = p.createSlider(0, s.duration, s.t, 0.01);\n      timeSlider.style('width', `${width - playButtonSize - 8}px`);\n      timeSlider.style('margin-left', `${playButtonSize}px`);\n      timeSlider.addClass('e-range');\n      timeSlider.parent(timeSliderRef.current);\n\n      time = p.createSpan(formatTimeAndDuration());\n      time.addClass('seek-time');\n      time.parent(timeSliderRef.current);\n\n      if (c && c.setup) {\n\n        try {\n          c.setup();\n        } catch (e) {\n          console.error(\"Failed to execute setup.\", e)\n        }\n      }\n\n      // countSlider = p.createSlider(0, 300, s.count, 0.01);\n      // countSlider.style('width', '200px');\n      // countSlider.addClass('e-range');\n      // countSlider.addClass('count-slider');\n      //\n      // const countSliderContainer = p.createDiv();\n      // countSliderContainer.addClass(\"count-slider-container\")\n      // countSliderContainer.parent(document.querySelector(\".sliders\"));\n      //\n      // const text = p.createSpan(\"Length\");\n      // text.parent(countSliderContainer);\n      // countSlider.parent(countSliderContainer);\n    }\n\n    p.draw = () => {\n      if (shouldRecord && !isRecording) {\n        updateTime(0);\n        setRecording(true);\n        setPlay(true);\n        // @ts-ignore\n        recorderRef.current.start(1000);\n      } else if (!shouldRecord && isRecording) {\n        // @ts-ignore\n        recorderRef.current.stop();\n        setRecording(false);\n      }\n\n      if (timeSlider.value() !== s.t) {\n        s.t = timeSlider.value();\n        updateTime(s.t);\n      }\n\n      let nextT = shouldPlay ? (s.t + s.rate) % s.duration : s.t;\n      if (c && c.draw) {\n        try {\n          c.draw(s.start + s.t, s.start + nextT);\n        } catch (e) {\n          p.noLoop();\n          console.error(\"Failed to execute draw.\", e)\n        }\n      }\n\n      if (shouldPlay) {\n        s.t = nextT;\n        updateTime(s.t);\n        if (!loop && s.t + s.rate >= s.duration) {\n          stop();\n        }\n      }\n    }\n  }\n\n  const myRef = useRef<HTMLDivElement>(null);\n  const p5Ref = useRef<p5>(null);\n  useEffect(() => {\n      if (p5Ref.current != null) {\n        p5Ref.current.remove();\n      }\n      p5Ref.current = new p5(Sketch, myRef.current);\n    }\n  );\n\n  return (\n    <div ref={cellRef} className={\"cell\"}>\n      {showRecordButton &&\n        <button\n          ref={saveVideoRef}\n          onClick={() => {\n            if (isRecording) {\n              stopRecording();\n            } else {\n              record();\n            }\n          }}\n        >{isRecording ? 'Recording...' : 'Record'}</button>\n      }\n      <div className={\"sketch\"} ref={myRef}/>\n      <div ref={timeSliderRef} className={\"time-slider\"}/>\n      <button\n        className={`play-button${!shouldPlay ? '' : ' paused'}`}\n        onClick={() => {setPlay(!shouldPlay); }}\n      />\n      {/**\n        <div className={\"info\"}>\n          Controls:\n          <div className={\"sliders\"}>\n          </div>\n        </div>\n      */}\n    </div>\n  );\n}","import p5 from 'p5';\n\nexport const plot2D = p5.prototype.plot2D = function (\n  start, end, xFn, yFn, {strokeWeight = 3, preVertex = (fraction, value) => {}} = {}\n) {\n  this.strokeWeight(strokeWeight);\n  this.noFill();\n  this.beginShape();\n  preVertex(0, start);\n  let x = xFn(start), y = yFn(start);\n  this.curveVertex(x, y);\n  this.endShape();\n  const partial = 1 / (end - start);\n  for (let i = start; i < end - 1; i++) {\n    this.beginShape();\n    preVertex((i - start) * partial, i);\n    let lastX = xFn(i - 1), lastY = yFn(i - 1);\n    this.curveVertex(lastX, lastY);\n    this.curveVertex(lastX, lastY);\n    let x = xFn(i), y = yFn(i);\n    this.curveVertex(x, y);\n    this.curveVertex(x, y);\n    this.endShape();\n  }\n  this.beginShape();\n  preVertex(1, end - 1);\n  x = xFn(end - 1);\n  y = yFn(end - 1);\n  this.curveVertex(x, y);\n  this.curveVertex(x, y);\n  this.endShape();\n  this.strokeWeight(1);\n}","import p5 from 'p5';\nimport katex from 'katex';\n\nexport const latex = p5.prototype.latex = function latex(\n  string, x = 0, y = 0\n) {\n  let tex = this.createSpan();\n  tex.style('font-size', `${this.textSize()}px`);\n  tex.position(x, y);\n  katex.render(string, tex.elt);\n}\n\nexport const text = p5.prototype.text = function text(\n  string, x = 0, y = 0,\n) {\n  return this.latex(`\\\\text{${string}}`, x, y);\n}","import p5 from 'p5';\nimport {plot2D} from \"./plot\";\nimport {latex} from \"./latex\";\n\np5.prototype.plot2D = plot2D;\np5.prototype.latex = latex;\n\nexport default p5;\n","import React, {useRef, useState} from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-jsx\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\"\nimport SketchCell from \"./SketchUtils/SketchCell\";\nimport {debounce} from \"react-ace/lib/editorOptions\";\n\nconst templateProgram = `// Player Settings\ns.start = 153;\ns.duration = 378 + 5 * 225;\ns.rate = 1;\ns.frameRate = 60;\n\n// Setup the P5.js Sketch\nlet particles = [];\np.setup = () => {\n  p.textSize(15);\n  // Convenience functions like \\`latex\\` are available.\n  p.text(\"The curve is defined by:\", 16, 16);\n  // Demonstrate our system of equations\n  p.latex(\n    \\`\\\\\\\\begin{cases}\n    \\${x1Latex}\\\\\\\\\\\\\\\\\n    \\${y1Latex}\n    \\\\\\\\end{cases}\\`,\n    16, 48\n  );\n\n  // This is where things that don't need to happen each frame should be called.\n  for(let i = 0;i<width/10;i++){\n    particles.push(new Particle());\n  }\n};\n\np.draw = (t, nextT) => {\n  // Draw the background each frame\n  p.background('#0f0f0f');\n  // Plot our function based on the current time.\n  plot(t);\n  \n  // Update our particles\n  for(let i = 0;i<particles.length;i++) {\n    // Draw particles\n    particles[i].drawParticle();\n    // Move them according to the current time\n    particles[i].moveParticle(t);\n    // Draw connecting lines\n    particles[i].joinParticles(particles.slice(i));\n  }\n};\n\n// Change the color and stroke according to fraction of drawn plot.\nconst fadingGradient = (fraction, _) => {\n    p.stroke(\n        p.lerpColor(\n            p.color('#277DA1'),\n            p.color('#F76C5E'),\n            fraction,\n        )\n    );\n    p.strokeWeight(fraction * 3);\n};\n\n// Plot our functions!\nconst plot = (t, tail = 100) => {\n  p.translate(s.width / 2, -s.height / 2.25);\n  let start = Math.max(0, t - tail);\n  let end = t;\n  p.plot2D(start, end, x1, y1, {preVertex:  fadingGradient});\n  p.translate(-s.width / 2, s.height / 2.25);\n};\n\n// The LATEX for our additive cos function.\nconst x1Latex = \"x = \\\\\\\\sum_{i=1}^{3} sin(\\\\\\\\frac{t}{10i})\";\n// The x-location of the tip of the plot at a given time.\nconst x1 = (t, scale = s.width / 10) => {\n  // Additive sine function\n  return scale * (p.sin(t/10) + p.sin(t/20) + p.sin(t/30));\n};\n\n// The LATEX for our additive sin function.\nconst y1Latex = \"y = \\\\\\\\sum_{i=1}^{3} cos(\\\\\\\\frac{t}{10i})\";\n// The y-location of the tip of the plot at a given time.\nconst y1 = (t, scale = s.width / 10) => {\n  // Additive cosine function\n  const yLoc = scale * (p.cos(t / 10) + p.cos(t / 20) + p.cos(t / 30));\n  // Flip the axis so we're drawing from the bottom left.\n  return s.height - yLoc;\n};\n\n// Adapted \"Simulated Particles\" from p5.js docs\n// Should be functionally identical, but is parametrized by \\`t\\`.\n// https://p5js.org/examples/simulate-particles.html\nclass Particle {\n  // setting the co-ordinates, radius and the\n  // speed of a particle in both the co-ordinates axes.\n  constructor(){\n    this.x = this.originX = p.random(0,width);\n    this.y = this.originY = p.random(0,height);\n    this.r = p.random(width / 1000, width / 200);\n    this.xSpeed = p.random(-width / 500, width / 500);\n    this.ySpeed = p.random(-height / 500, height / 500);\n  }\n\n  // Creation of a particle.\n  drawParticle() {\n    p.noStroke();\n    p.fill('rgba(200,169,169,0.5)');\n    p.circle(this.x,this.y,this.r);\n  }\n  \n  // Make particles bounce of the sides\n  bounce (rawVal, max) {\n    const val = p.abs(rawVal);\n    let bounces = p.floor(val / max);\n    let remainder = val % max;\n    if (bounces % 2 == 1) {\n        remainder = (max - remainder);\n    }\n    return remainder;\n  }\n\n  // setting the particle in motion.\n  moveParticle(t) {\n    this.x = this.bounce(this.originX + this.xSpeed * t, width);\n    this.y = this.bounce(this.originY + this.ySpeed * t, height);\n  }\n\n  // this function creates the connections(lines)\n  // between particles which are less than a certain distance apart\n  joinParticles(particles) {\n    particles.forEach(element =>{\n      let dis = p.dist(this.x,this.y,element.x,element.y);\n      if (dis < width / 10) {\n        p.stroke('rgba(255,255,255,0.04)');\n        p.line(this.x,this.y,element.x,element.y);\n      }\n    });\n  }\n}\n`;\n\nexport default function EditorCell({\n  height,\n  width = 700,\n  updateOnChange = false,\n}) {\n  const [codeString, setCodeString] = useState(templateProgram);\n  const onChange = (newValue) => {\n    setCodeString(newValue);\n  };\n  const onBlur = (e, editor) => {\n    setCodeString(editor.getValue());\n  };\n  const sketchHeight = (4/7) * width;\n  const editorHeight = height - sketchHeight;\n  return (\n    <div>\n      <SketchCell\n        width={width}\n        height={sketchHeight}\n        codeString={codeString}\n        rate={1}\n        loop={true}\n      />\n      {// @ts-ignore\n      }{editorHeight > 0 && <AceEditor\n      style={{width: `${width}px`}}\n      height={`${height - sketchHeight}px`}\n      mode=\"jsx\"\n      theme=\"monokai\"\n      name=\"UNIQUE_ID_OF_DIV\"\n      onChange={updateOnChange ? debounce(onChange, 300) : undefined}\n      onBlur={!updateOnChange ? onBlur : undefined}\n      defaultValue={templateProgram}\n      editorProps={{$blockScrolling: true}}\n      setOptions={{\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        enableSnippets: true,\n        tabSize: 2,\n      }}\n    />\n    }\n    </div>\n  );\n}","import React, {useLayoutEffect, useState} from 'react';\nimport SketchCell from \"./SketchUtils/SketchCell\";\nimport './App.css';\nimport EditorCell from \"./Notebook\";\n\nfunction App() {\n  // const code = (p, s) => {\n  //   const setup = () => {\n  //     p.textSize(15);\n  //     p.latex(\"x = \\\\sum_{i=1}^{3} sin(\\\\frac{t}{10i})\", 8, 8);\n  //   };\n  //\n  //   const draw = (t) => {\n  //     p.background(0);\n  //     plot(t);\n  //   };\n  //\n  //   const plot = (t, length= 100, color = '#F76C5E') => {\n  //     p.plot2D(t, length, x1, y1_, color, 3);\n  //   }\n  //\n  //   const x1 = (t) => {\n  //     // return t;\n  //     let scale = s.width / 10;\n  //     return s.width / 2 + scale * (p.sin(t/10) + p.sin(t/20) + p.sin(t/30));\n  //   }\n  //\n  //   const y1_ = (t) => {\n  //     return s.height - y1(t);\n  //   }\n  //\n  //   const y1 = (t) => {\n  //     // return t;\n  //     let scale = s.width / 10;\n  //     return s.height / 2 + scale * (p.cos(t / 10) + p.cos(t / 20) + p.cos(t / 30));\n  //   }\n  //   return {setup, draw};\n  // };\n\n  function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n  }\n\n  const [width, height] = useWindowSize();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<SketchCell*/}\n        {/*  height={200}*/}\n        {/*  width={200}*/}\n        {/*  code={code}*/}\n        {/*  rate={2}*/}\n        {/*/>*/}\n        {width && <EditorCell height={height} width={width} updateOnChange={true} />}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}