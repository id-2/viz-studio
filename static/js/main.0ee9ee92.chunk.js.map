{"version":3,"sources":["SketchUtils/plot.ts","SketchUtils/latex.ts","SketchUtils/webgl.ts","SketchUtils/cache.ts","SketchUtils/cachedSlider.ts","SketchUtils/once.ts","SketchUtils/p5.ts","SketchUtils/SketchCell.tsx","examples/plotAndParticles.ts","Notebook.tsx","examples/mandelbrot.ts","examples/doublePendulum.ts","examples/newSketch.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["plot2D","p5","prototype","start","end","xFn","yFn","strokeWeight","preVertex","fraction","value","this","noFill","beginShape","x","y","curveVertex","endShape","partial","i","lastX","lastY","latex","string","tex","createSpan","style","textSize","position","katex","render","elt","staticText","isWebGL","_renderer","drawingContext","WebGLRenderingContext","cache","name","item","__state","fromCache","removeFromCache","clearCache","cachedSlider","min","max","defaultValue","slider","createSlider","addClass","once","fn","__once","toString","fromOnce","SketchCell","duration","frameRate","rate","cellWidth","cellHeight","playButtonSize","autoPlay","loop","webgl","code","p","s","setup","draw","t","codeString","freshState","window","p5Ref","useRef","cellRef","timeSliderRef","recorderRef","videoChunks","streamRef","playButtonRef","width","height","prevCodeString","current","useEffect","useState","shouldRecord","isRecording","setRecording","exportVideo","e","blob","Blob","vid","document","createElement","id","controls","source","src","URL","createObjectURL","type","appendChild","body","play","isPlaying","playState","togglePlay","setValue","shouldPlay","className","MediaRecorder","audioBitsPerSecond","videoBitsPerSecond","mimeType","ondataavailable","data","size","console","log","push","onstop","Sketch","timeSlider","updateTime","progressHandle","time","fieldsToUpdate","updateLookup","Set","__window_funcs","p2d","P2D","postActionFunctions","loadPixels","updateEvents","bind","w","h","_p","createCanvas","canvas","clientWidth","clientHeight","userFn","__postActionFunctions","execCodeString","m","clear","startsWith","includes","add","preExecute","codeToExecute","join","match","length","split","widthString","heightString","parseInt","eval","call","c","result","error","forEach","formatTimeAndDuration","floor","stop","keepTime","loadFont","preload","WEBGL","randomSeed","noStroke","sliderWidth","step","createDiv","attribute","parent","progress","html","textFont","nextT","noDraw","noLoop","myRef","remove","ref","onClick","plotAndParticles","hashCode","hash","charCodeAt","EditorCell","updateOnChange","setFreshState","resizeFraction","setResizeFraction","setCodeString","autoUpdate","location","useLocation","history","useHistory","defaultHeight","Math","sketchHeight","setSketchHeight","updateProg","prog","str","toLowerCase","decodeURIComponent","escape","atob","pathname","substr","listen","loc","onChange","newValue","btoa","unescape","encodeURIComponent","defaultSize","debounce","allowResize","mode","theme","undefined","onBlur","editor","getValue","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","tabSize","printMargin","App","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","hashType","getElementById"],"mappings":"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","file":"static/js/main.0ee9ee92.chunk.js","sourcesContent":["import p5 from 'p5';\n\nexport const plot2D = p5.prototype.plot2D = function (\n  start, end, xFn, yFn, {strokeWeight = 3, preVertex = (fraction, value) => {}} = {}\n) {\n  this.strokeWeight(strokeWeight);\n  this.noFill();\n  this.beginShape();\n  preVertex(0, start);\n  let x = xFn(start), y = yFn(start);\n  this.curveVertex(x, y);\n  this.endShape();\n  const partial = 1 / (end - start);\n  for (let i = start; i <= end; i++) {\n    this.beginShape();\n    preVertex((i - start) * partial, i);\n    let lastX = xFn(i - 1), lastY = yFn(i - 1);\n    this.curveVertex(lastX, lastY);\n    this.curveVertex(lastX, lastY);\n    let x = xFn(i), y = yFn(i);\n    this.curveVertex(x, y);\n    this.curveVertex(x, y);\n    this.endShape();\n  }\n  this.beginShape();\n  preVertex(1, end);\n  x = xFn(end);\n  y = yFn(end);\n  this.curveVertex(x, y);\n  this.curveVertex(x, y);\n  this.endShape();\n  this.strokeWeight(1);\n}","import p5 from 'p5';\nimport katex from 'katex';\n\nexport const latex = p5.prototype.latex = function latex(\n  string, x = 0, y = 0\n) {\n  let tex = this.createSpan();\n  tex.style('font-size', `${this.textSize()}px`);\n  tex.position(x, y);\n  katex.render(string, tex.elt);\n  return tex;\n}\n\nexport const staticText = p5.prototype.staticText = function staticText(\n  string, x = 0, y = 0,\n) {\n  return this.latex(`\\\\text{${string}}`, x, y);\n}","import p5 from \"p5\";\n\nexport const isWebGL = p5.prototype.isWebGL = function isWebGL() {\n  return this._renderer.drawingContext instanceof WebGLRenderingContext;\n}","import p5 from 'p5';\n\nexport const cache = p5.prototype.cache = function cache(name, item) {\n  if (!this.__state) {\n    this.__state = {};\n  }\n  this.__state[name] = item;\n  return this.__state[name];\n};\n\nexport const fromCache = p5.prototype.fromCache = function fromCache(name) {\n  return this.__state[name];\n};\n\nexport const removeFromCache = p5.prototype.removeFromCache = function removeFromCache(name) {\n  delete this.__state[name];\n};\n\nexport const clearCache = p5.prototype.clearCache = function clearCache(name) {\n  this.__state = {};\n};","import p5 from 'p5';\n\nexport const cachedSlider = p5.prototype.cachedSlider = function cachedSlider(name, min, max, defaultValue) {\n  if (!this.__state) {\n    this.__state = {};\n  }\n  const slider = this.createSlider(min, max, this.fromCache(name)?.value() ?? defaultValue);\n  slider.addClass(\"e-range\");\n  slider.style('width', '80px');\n  slider.style('margin-top', '8px');\n  slider.style('background', 'blue');\n  return this.cache(name, slider);\n};","import p5 from 'p5';\n\nexport const once = p5.prototype.once = function once(fn) {\n  if (!this.__once) {\n    this.__once = {};\n  }\n  if (!this.__once[fn.toString()]) {\n    this.__once[fn.toString()] = fn();\n  }\n  return this.__once[fn.toString()];\n};\n\nexport const fromOnce = p5.prototype.fromOnce = function fromOnce(name) {\n  return (this.__once || {})[name];\n};","import p5 from 'p5';\nimport {plot2D} from \"./plot\";\nimport {latex, staticText} from \"./latex\";\nimport {isWebGL} from \"./webgl\";\nimport {cache, clearCache, fromCache, removeFromCache} from \"./cache\";\nimport {cachedSlider} from \"./cachedSlider\";\nimport {fromOnce, once} from \"./once\";\n\np5.prototype.plot2D = plot2D;\np5.prototype.latex = latex;\np5.prototype.staticText = staticText;\np5.prototype.isWebGL = isWebGL;\np5.prototype.cache = cache;\np5.prototype.fromCache = fromCache;\np5.prototype.removeFromCache = removeFromCache;\np5.prototype.clearCache = clearCache;\np5.prototype.cachedSlider = cachedSlider;\np5.prototype.once = once;\np5.prototype.fromOnce = fromOnce;\n\nexport default p5;\n","import React, {useEffect, useRef, useState} from 'react';\nimport p5 from './p5';\nimport './slider.scss'\nimport './play-button.scss'\nimport './cell.scss';\ndeclare var MediaRecorder: any;\n\nexport default function SketchCell(\n  {\n    start = 0,\n    duration = 30,\n    frameRate = 60,\n    rate = 1,\n    cellWidth= 710,\n    cellHeight = 400,\n    playButtonSize = 30,\n    autoPlay = true,\n    loop = false,\n    webgl = false,\n    code = (p: p5, s: any) => ({\n      setup: () => {},\n      draw: (t) => {},\n    }),\n    codeString = \"\",\n    freshState = false,\n  }\n) {\n  window['height'] = cellHeight;\n  window['width'] = cellWidth;\n  const p5Ref = useRef<p5>(null);\n\n  const showRecordButton = false;\n  // const recorderRef = useRef(new Recorder());\n  const progressRef = useRef(null);\n  const cellRef = useRef(null);\n  const timeSliderRef = useRef(null);\n  const saveVideoRef = useRef(null);\n  const recorderRef = useRef(null);\n  const videoChunks = useRef([]);\n  const streamRef = useRef(null);\n  const playButtonRef = useRef(null);\n\n  const sketchState = useRef({\n    t: 0,\n    start,\n    duration,\n    rate,\n    width: cellWidth,\n    height: cellHeight,\n    loop,\n    autoPlay,\n    codeString,\n    prevCodeString: '',\n    frameRate,\n    webgl,\n    __state: {},\n    __once: {},\n  });\n\n  const s = sketchState.current;\n\n  useEffect(() => {\n    s.start = start;\n    s.duration = duration;\n    s.rate = rate;\n    s.width = cellWidth;\n    s.height = cellHeight;\n    s.loop = loop;\n    s.autoPlay = autoPlay;\n    s.codeString = codeString;\n    s.frameRate = frameRate;\n    s.webgl = webgl;\n\n    if (p5Ref.current) {\n      s.__state = p5Ref.current?.__state ?? { '__playing': autoPlay };\n      s.__once = p5Ref.current?.__once ?? {};\n    }\n  }, [\n    start, duration, rate, cellWidth, cellHeight, loop, autoPlay, s,\n    codeString, frameRate, webgl, freshState, p5Ref.current?.__state, p5Ref.current?.__once,\n  ])\n\n  const [shouldRecord, setRecord] = useState(false);\n  const [isRecording, setRecording] = useState(false);\n\n  const record = () => {\n    setRecord(true);\n    videoChunks.current = [];\n  };\n\n  const stopRecording = () => {\n    setRecord(false);\n  };\n\n  useEffect(() => {\n    if (streamRef.current === null) {\n      return;\n    }\n    if (recorderRef.current == null) {\n      // @ts-ignore\n      recorderRef.current = new MediaRecorder(streamRef.current, {\n        audioBitsPerSecond: 0,\n        videoBitsPerSecond: 2500000,\n        mimeType: 'video/webm',\n      });\n      // @ts-ignore\n      recorderRef.current.ondataavailable = e => {\n        if (e.data.size) {\n          console.log(\"Got chunk\", e.data);\n          // @ts-ignore\n          videoChunks.current.push(e.data);\n        }\n      };\n      // @ts-ignore\n      recorderRef.current.onstop = exportVideo;\n    }\n  }, []);\n\n  function exportVideo(e) {\n    var blob = new Blob(videoChunks.current);\n    var vid = document.createElement('video');\n    vid.id = 'recorded'\n    vid.controls = true;\n    var source = document.createElement('source');\n    source.src = URL.createObjectURL(blob);\n    source.type = blob.type;\n    vid.appendChild(source);\n    document.body.appendChild(vid);\n    vid.play();\n  }\n\n  function isPlaying(p) {\n    let playState = p?.fromCache('__playing');\n    if (playState == null) {\n      p.cache('__playing', autoPlay);\n      playState = autoPlay;\n    }\n    return playState;\n  }\n\n  function togglePlay(p, setValue: boolean | null = null) {\n    const shouldPlay = setValue ?? !isPlaying(p);\n    if (playButtonRef.current != null) {\n      // @ts-ignore\n      playButtonRef.current.className = `play-button${!shouldPlay ? '' : ' paused'}`;\n    }\n    p?.cache('__playing', shouldPlay);\n  }\n\n  const Sketch = (p) => {\n    window['p'] = p;\n\n    // p.noDraw = false;\n    // p.noLoop = () => {\n    //   p.noDraw = true;\n    // };\n\n    // const updatePreDraw = ['mouseX', 'mouseY', 'mouseButton', 'mouseIsPressed', 'height', 'width'];\n    const fieldsToUpdate: string[] = [];\n    const updateLookup = new Set();\n\n    p.__once = s.__once;\n    p.__state = s.__state;\n    let timeSlider;\n    let updateTime;\n    let progressHandle;\n    let time;\n    let sliderWidth;\n    // let countSlider;\n    // @ts-ignore\n    window.__window_funcs = {};\n\n    let p2d = p.P2D;\n    // @ts-ignore\n    const postActionFunctions = {\n      'loadPixels': function () {\n        // @ts-ignore\n        let p: p5 = this;\n        p.loadPixels();\n        updateEvents();\n      }.bind(p),\n      'createCanvas': function (w, h, type = p2d) {\n        // @ts-ignore\n        let _p: p5 = this;\n        _p.createCanvas(w, h, type);\n        s.webgl = p.isWebGL();\n        const canvas = p._renderer.drawingContext.canvas;\n        s.width = canvas.clientWidth;\n        s.height = canvas.clientHeight;\n        _p.width = canvas.clientWidth;\n        _p.height = canvas.clientHeight;\n        window['width'] = canvas.clientWidth;\n        window['height'] = canvas.clientHeight;\n      }.bind(p)\n    };\n    // @ts-ignore\n    window.__postActionFunctions = postActionFunctions;\n\n    // @ts-ignore\n    for (let userFn in postActionFunctions) {\n      // @ts-ignore\n      window[userFn] = postActionFunctions[userFn];\n    }\n\n    const execCodeString = (code) => {\n      updateLookup.clear();\n      for (let m in p) {\n        if (!m.startsWith('_') && typeof p[m] !== \"function\" && code.includes(m)) {\n          fieldsToUpdate.push(m);\n          updateLookup.add(m);\n        }\n      }\n\n      const preExecute: string[] = [];\n      for (let m in p) {\n        if (!m.startsWith('_')) {\n          if (typeof p[m] === \"function\" && !postActionFunctions[m]) {\n            preExecute.push(`var ${m} = p.${m}.bind(p);`);\n          } else if (typeof p[m] !== \"function\") {\n            preExecute.push(`var ${m} = p.${m};`);\n          }\n        }\n      }\n\n      const codeToExecute = `\n      ${preExecute.join('\\n')}\n      ${code}\n      const entries = [];\n      for (let m in window) {\n        if (typeof window[m] === 'function' && !__window_funcs[m] && !window.__postActionFunctions[m]) {\n          entries.push([m, window[m]]);\n          p[m] = window[m];\n        }\n      }\n      Object.fromEntries(entries);`;\n      if (code) {\n        const match = code.match(/createCanvas\\((.*)\\)/);\n        if (match && match.length > 1) {\n          const [widthString, heightString] = match[1].split(\",\");\n          p.width = parseInt(widthString);\n          p.height = parseInt(heightString);\n          s.width = p.width;\n          s.height = p.height;\n        }\n        window['width'] = s.width;\n        window['height'] = s.height;\n      }\n      window['s'] = s;\n      let result = eval.call(window['p'], codeToExecute);\n      // @ts-ignore\n      // window['p'] = undefined;\n      return result;\n    };\n\n    const c = s.codeString ? (\n      (() => {\n        try {\n          const result = execCodeString(s.codeString);\n          s.prevCodeString = s.codeString;\n          return result;\n        } catch (e) {\n          console.error(\"Failed to compile.\", e);\n          return execCodeString(s.prevCodeString);\n        }\n      })()\n    ): code(p, s);\n\n    let shouldUpdateEvents = true;\n\n    const updateEvents = () => {\n      if (!shouldUpdateEvents) return;\n      updateLookup.forEach((m) => {\n        // @ts-ignore\n        if (window[m] !== p[m]) {\n          // @ts-ignore\n          window[m] = p[m];\n        }\n      });\n      // shouldUpdateEvents = false;\n    };\n\n    const userFunctions = [\n      'mousePressed',\n      'mouseDragged',\n      'mouseMoved',\n      'mouseReleased',\n      'mouseClicked',\n      'mouseWheel',\n      'doubleClicked',\n      'windowResized',\n      'touchStarted',\n      'touchMoved',\n      'touchEnded',\n      'deviceMoved',\n      'deviceTurned',\n      'deviceShaken',\n      'keyPressed',\n      'keyReleased',\n      'keyTyped',\n    ];\n\n    userFunctions.forEach((userFn) => {\n      p[userFn] = () => {\n        updateEvents();\n        if (c && c[userFn]) {\n          c[userFn]();\n        }\n      };\n    });\n\n    const preDraw = () => {\n\n    }\n\n    const getFriendlyTime = () => p.floor(s.start + s.t);\n    const getFriendlyDuration = () => p.floor(s.start + s.duration);\n    const formatTimeAndDuration = () => `${getFriendlyTime()} / ${getFriendlyDuration()}`;\n\n    const stop = (keepTime = false) => {\n      togglePlay(p, false);\n      if (isRecording) {\n        setRecording(false);\n        // @ts-ignore\n        recorderRef.current.stop();\n      }\n      if (!keepTime) {\n        updateTime(0);\n      }\n    };\n\n    const loadFont = () => p.once(() => p.loadFont('resources/KaTeX_Main-Regular.ttf'));\n\n    p.preload = () => {\n      if (s.webgl) {\n        loadFont();\n      }\n\n      if (c && c.preload) {\n        p.once(c.preload);\n      }\n    };\n\n    p.setup = () => {\n      p.loop();\n      // create canvas\n      let createCanvas = s.webgl\n        ? postActionFunctions['createCanvas'](cellWidth, cellHeight, p.WEBGL)\n        : postActionFunctions['createCanvas'](cellWidth, cellHeight);\n\n      // streamRef.current = canvas.elt.captureStream(60)\n      p.randomSeed(1337);\n      p.frameRate(s.frameRate);\n      p.textSize(15);\n      p.noStroke();\n\n      function createSlider(sliderWidth, min, max, current, step = 1) {\n        timeSlider = p.createDiv();\n        timeSlider.attribute(\"role\", \"slider\")\n        timeSlider.attribute(\"aria-label\", \"Seek slider\")\n        timeSlider.attribute(\"draggable\", \"true\")\n        timeSlider.attribute(\"aria-valuemin\", min)\n        timeSlider.attribute(\"aria-valuenow\", current)\n        timeSlider.style('width', `${sliderWidth}px`);\n        timeSlider.style('margin-left', `${playButtonSize}px`);\n        timeSlider.addClass('progress-bar');\n\n        progressHandle = p.createSlider(min, max, current, step);\n        progressHandle.addClass('progress-handle');\n        progressHandle.style('width', `${sliderWidth}px`);\n        progressHandle.parent(timeSlider);\n\n        const progress = p.createDiv();\n        progress.addClass('progress-fill');\n        progress.parent(timeSlider);\n        return [\n          timeSlider,\n          (t) => {\n            progress.style('width', `${sliderWidth * (t / max)}px`);\n            progressHandle.value(t);\n            timeSlider.attribute('aria-valuenow', t);\n            time.html(formatTimeAndDuration());\n          }\n        ];\n      }\n\n      [timeSlider, updateTime] = createSlider(cellWidth - playButtonSize - 8,0, s.duration, s.t, 0.01);\n      timeSlider.parent(timeSliderRef.current);\n\n      time = p.createSpan();\n      time.addClass('seek-time');\n      time.parent(timeSliderRef.current);\n\n      updateTime(s.t);\n\n      if (c && c.setup) {\n        try {\n          c.setup();\n        } catch (e) {\n          console.error(\"Failed to execute setup.\", e)\n        }\n      }\n\n      // let height = canvas.height;\n      // let width = canvas.width;\n      if (s.webgl && typeof p.textFont() !== \"object\") {\n        p.textFont(loadFont());\n      }\n    }\n\n    p.draw = () => {\n      p.textSize(18);\n      if (shouldRecord && !isRecording) {\n        updateTime(0);\n        setRecording(true);\n        togglePlay(p,true);\n        // @ts-ignore\n        recorderRef.current.start(1000);\n      } else if (!shouldRecord && isRecording) {\n        // @ts-ignore\n        recorderRef.current.stop();\n        setRecording(false);\n      }\n\n      if (progressHandle.value() !== s.t) {\n        s.t = progressHandle.value();\n        updateTime(s.t);\n      }\n\n      let shouldPlay = isPlaying(p);\n      let nextT = shouldPlay ? (s.t + s.rate) % s.duration : s.t;\n      if (c && c.draw && !p.noDraw) {\n        try {\n          c.draw(s.start + s.t, s.start + nextT);\n        } catch (e) {\n          p.noLoop();\n          console.error(\"Failed to execute draw.\", e)\n        }\n      }\n\n      if (shouldPlay && !p.noDraw) {\n        s.t = nextT;\n        updateTime(s.t);\n        if (!loop && s.t + s.rate >= s.duration) {\n          stop();\n        }\n      } else if (shouldPlay && p.noDraw) {\n        stop();\n      }\n    }\n  };\n\n  const myRef = useRef<HTMLDivElement>(null);\n  const rerender = () => {\n    if (myRef.current == null) return;\n    if (p5Ref.current != null) {\n      p5Ref.current.remove();\n    }\n    p5Ref.current = new p5(Sketch, myRef.current);\n  };\n  // const sketchCallback = useCallback(Sketch, [Sketch]);\n  useEffect(rerender, [Sketch, cellWidth, cellHeight]);\n\n  return (\n    <div ref={cellRef} className={\"cell\"}>\n      {showRecordButton &&\n        <button\n          ref={saveVideoRef}\n          onClick={() => {\n            if (isRecording) {\n              stopRecording();\n            } else {\n              record();\n            }\n          }}\n        >{isRecording ? 'Recording...' : 'Record'}</button>\n      }\n      <div className={\"sketch\"} ref={myRef}/>\n      <div ref={timeSliderRef} className={\"time-slider\"}/>\n      <button\n        ref={playButtonRef}\n        className={`play-button${!autoPlay ? '' : ' paused'}`}\n        onClick={() => {togglePlay(p5Ref.current); }}\n      />\n      {/**\n        <div className={\"info\"}>\n          Controls:\n          <div className={\"sliders\"}>\n          </div>\n        </div>\n      */}\n    </div>\n  );\n}","export const plotAndParticles = `// Player Settings\ns.start = 153;\ns.duration = 378 + 5 * 225;\ns.rate = 1;\ns.frameRate = 60;\ns.webgl = false;\n\n// Setup the P5.js Sketch\nlet particles = [];\nfunction setup() {\n  // Convenience functions like \\`latex\\` are available.\n  staticText(\"The curve is defined by:\", 16, 16);\n  // Demonstrate our system of equations\n  latex(\n    \\`\\\\\\\\begin{cases}\n    \\${x1Latex}\\\\\\\\\\\\\\\\\n    \\${y1Latex}\n    \\\\\\\\end{cases}\\`,\n    16, 48\n  );\n\n  // This is where things that don't need to happen each frame should be called.\n  for (let i = 0; i < width / 10; i++) {\n    particles.push(new Particle());\n  }\n};\n\nfunction draw (t, nextT) {\n  // WebGL origin is the center.\n  if (isWebGL()) {\n    translate(- width / 2, - height / 2)\n  }\n  // Draw the background each frame\n  background('#0f0f0f');\n  // Plot our function based on the current time.\n  plot(t);\n  \n  // Update our particles\n  for(let i = 0;i<particles.length;i++) {\n    // Draw particles\n    particles[i].drawParticle();\n    // Move them according to the current time\n    particles[i].moveParticle(t);\n    // Draw connecting lines\n    particles[i].joinParticles(particles.slice(i));\n  }\n};\n\n// Change the color and stroke according to fraction of drawn plot.\nconst fadingGradient = (fraction, _) => {\n    stroke(\n        lerpColor(\n            color('#277DA1'),\n            color('#F76C5E'),\n            fraction,\n        )\n    );\n    strokeWeight(fraction * 3);\n};\n\n// Plot our functions!\nconst plot = (t, tail = 100) => {\n  translate(s.width / 2, -s.height / 2.25);\n  let start = Math.max(0, t - tail);\n  let end = t;\n  plot2D(start, end, x1, y1, {preVertex:  fadingGradient});\n  translate(-s.width / 2, s.height / 2.25);\n};\n\n// The LATEX for our additive cos function.\nconst x1Latex = \"x = \\\\\\\\sum_{i=1}^{3} sin(\\\\\\\\frac{t}{10i})\";\n// The x-location of the tip of the plot at a given time.\nconst x1 = (t, scale = Math.min(s.width, s.height) / 10) => {\n  // Additive sine function\n  return scale * (sin(t / 10) + sin(t / 20) + sin(t / 30));\n};\n\n// The LATEX for our additive sin function.\nconst y1Latex = \"y = \\\\\\\\sum_{i=1}^{3} cos(\\\\\\\\frac{t}{10i})\";\n// The y-location of the tip of the plot at a given time.\nconst y1 = (t, scale = Math.min(s.width, s.height) / 10) => {\n  // Additive cosine function\n  const yLoc = scale * (cos(t / 10) + cos(t / 20) + cos(t / 30));\n  // Flip the axis so we're drawing from the bottom left.\n  return s.height - yLoc;\n};\n\n// Adapted \"Simulated Particles\" from p5.js docs\n// Should be functionally identical, but is parametrized by \\`t\\`.\n// https://p5js.org/examples/simulate-particles.html\nclass Particle {\n  // setting the co-ordinates, radius and the\n  // speed of a particle in both the co-ordinates axes.\n  constructor(){\n    this.x = this.originX = random(0,width);\n    this.y = this.originY = random(0,height);\n    this.r = random(width / 1000, width / 200);\n    this.xSpeed = random(-width / 500, width / 500);\n    this.ySpeed = random(-height / 500, height / 500);\n  }\n\n  // Creation of a particle.\n  drawParticle() {\n    noStroke();\n    fill('rgba(200,169,169,0.5)');\n    circle(this.x,this.y,this.r);\n  }\n  \n  // Make particles bounce of the sides\n  bounce (rawVal, max) {\n    const val = abs(rawVal);\n    let bounces = floor(val / max);\n    let remainder = val % max;\n    if (bounces % 2 == 1) {\n        remainder = (max - remainder);\n    }\n    return remainder;\n  }\n\n  // setting the particle in motion.\n  moveParticle(t) {\n    this.x = this.bounce(this.originX + this.xSpeed * t, width);\n    this.y = this.bounce(this.originY + this.ySpeed * t, height);\n  }\n\n  // this function creates the connections(lines)\n  // between particles which are less than a certain distance apart\n  joinParticles(particles) {\n    particles.forEach(element =>{\n      let dis = dist(this.x,this.y,element.x,element.y);\n      if (dis < Math.min(width, height) / 10) {\n        stroke('rgba(255,255,255,0.04)');\n        line(this.x,this.y,element.x,element.y);\n      }\n    });\n  }\n}\n`;","import React, {useEffect, useRef, useState} from \"react\";\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-jsx\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\"\nimport SketchCell from \"./SketchUtils/SketchCell\";\nimport {debounce} from \"react-ace/lib/editorOptions\";\nimport SplitPane from \"react-split-pane\";\nimport './Notebook.scss';\nimport {plotAndParticles} from \"./examples/plotAndParticles\";\nimport {doublePendulum} from \"./examples/doublePendulum\";\nimport {mandelbrot} from \"./examples/mandelbrot\";\nimport {newSketch} from \"./examples/newSketch\";\n\nfunction to_b64( str ) {\n  return window.btoa(unescape(encodeURIComponent( str )));\n}\n\nfunction from_b64( str ) {\n  return decodeURIComponent(escape(window.atob( str )));\n}\n\nfunction hashCode(string){\n  let hash = 0;\n  for (let i = 0; i < string.length; i++) {\n    const character = string.charCodeAt(i);\n    hash = ((hash<<5)-hash) + character;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport default function EditorCell({\n  height,\n  width = 700,\n  updateOnChange = false,\n}) {\n  const [freshState, setFreshState] = useState(false);\n  const [resizeFraction, setResizeFraction] = useState(4/7);\n  const [codeString, setCodeString] = useState(``);\n  const autoUpdate = useRef(false);\n  const location = useLocation();\n  const history = useHistory();\n\n  const defaultHeight = useRef(Math.floor(resizeFraction * width));\n  // useEffect(() => {\n  //   defaultHeight.current = parseInt(\n  //     localStorage.getItem('splitPos') ?? defaultHeight.current.toString(), 10\n  //   );\n  // }, []);\n\n  const [sketchHeight, setSketchHeight] = useState(defaultHeight.current);\n\n  function updateProg(prog) {\n    if (!prog.length) {\n      setCodeString(plotAndParticles);\n      return;\n    }\n    if (prog.toLowerCase() === \"new\") {\n      setCodeString(newSketch);\n      return;\n    }\n    if (prog.toLowerCase() === \"pendulum\") {\n      setCodeString(doublePendulum);\n      return;\n    }\n    if (prog.toLowerCase() === \"mandelbrot\") {\n      setCodeString(mandelbrot);\n      return;\n    }\n    try {\n      const code = from_b64(prog);\n      setCodeString(code);\n    } catch (e) {\n      console.error(\"Unable to parse program, falling back to template.\");\n      location.hash = \"\";\n      setCodeString(plotAndParticles);\n    }\n  }\n\n  useEffect(() => {\n    updateProg(location.pathname.substr(1));\n    history.listen((loc) => {\n      if (autoUpdate.current) return;\n      setFreshState(true);\n      updateProg(loc.pathname.substr(1));\n      setFreshState(false);\n    });\n  }, []);\n\n  const onChange = (newValue) => {\n    if (hashCode(codeString) !== hashCode(newValue)) {\n      setCodeString(newValue);\n      // const title = `${document.title} - Updated`;\n      autoUpdate.current = true;\n      const prog = to_b64(newValue);\n      history.push(prog);\n      updateProg(prog)\n      autoUpdate.current = false;\n    }\n  };\n\n  const onBlur = (e, editor) => onChange(editor.getValue());\n  const editorHeight = height - sketchHeight;\n\n  const updateSize = (size) => {\n    // localStorage.setItem('splitPos', size.toString());\n    setResizeFraction(size / height);\n    setSketchHeight(resizeFraction * height);\n  };\n\n  useEffect(() => {\n    setSketchHeight(resizeFraction * height);\n  }, [height, resizeFraction])\n\n  return (\n    <div>\n      {codeString && <SplitPane\n        split=\"horizontal\"\n        defaultSize={sketchHeight}\n        onChange={debounce(updateSize, 300)}\n        allowResize={true}\n      >\n        <SketchCell\n        cellWidth={width}\n        cellHeight={sketchHeight}\n        codeString={codeString}\n        rate={1}\n        loop={true}\n        freshState\n      />\n      {// @ts-ignore\n      }<AceEditor\n        style={{width: `${width}px`}}\n        height={`${height - sketchHeight}px`}\n        mode=\"jsx\"\n        theme=\"monokai\"\n        name=\"UNIQUE_ID_OF_DIV\"\n        onChange={updateOnChange ? debounce(onChange, 300) : undefined}\n        onBlur={!updateOnChange ? onBlur : undefined}\n        value={codeString}\n        defaultValue={codeString}\n        editorProps={{$blockScrolling: true}}\n        setOptions={{\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: true,\n          enableSnippets: true,\n          tabSize: 2,\n          printMargin: false,\n        }}\n      />\n      </SplitPane>}\n    </div>\n  );\n}","export const mandelbrot = `s.start = 940;\ns.duration = 2200 - s.start;\ns.webgl = true;\n\n// the 'varying's are shared between both vertex & fragment shaders\nlet varying = \\`precision highp float; varying vec2 vPos;\\`;\n\nconst ratio = s.width / s.height;\n// the vertex shader is called for each vertex\nlet vs =\n  varying +\n  \\`attribute vec3 aPosition;\\` +\n  \\`void main() { vPos = (gl_Position = vec4(aPosition, 1.0)).xy * vec2(\\${ratio}, 1); }\\`;\n\n// the fragment shader is called for each pixel\nlet fs =\n  varying + \\`\n  uniform vec2 p;\n  uniform float r;\n  const int I = 500;\n  void main() {\n    vec2 c = p + vPos * r, z = c;\n    float n = 0.0;\n    for (int i = I; i > 0; i --) {\n      if (z.x*z.x+z.y*z.y > 4.0) {\n        n = float(i) / float(I);\n        break;\n      }\n      z = vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y) + c;\n    }\n    gl_FragColor = vec4(0.5-cos(n*12.0) / 1.0, 0.5-cos(n*13.0) / 2.0, 0.5-cos(n*23.0) / 2.0, 1.0);\n  }\\`;\n\nlet mandel;\nfunction setup () {\n  staticText(\"Mandelbrot\", 8, 8);\n\n  mandel = createShader(vs, fs);\n  shader(mandel);\n  noStroke();\n\n  // 'p' is the center point of the Mandelbrot image\n  mandel.setUniform('p', [-0.74364388703, 0.13182590421]);\n};\n\nfunction draw (t, nextT) {\n  background(0);\n  translate(-s.width / 2, -s.height / 2);\n    mandel.setUniform('r', 1.5 * exp(-6.5 * (1 + sin(t / 200))));\n      quad(-1, -1, 1, -1, 1, 1, -1, 1);\n};`;","export const doublePendulum = `// Adapted (look, feel, and parameterized by time) from:\n// Daniel Shiffman\n// https://thecodingtrain.com/CodingChallenges/093-double-pendulum.html\nlet size;\nlet r1;\nlet r2;\nlet m1;\nlet m2;\nlet g;\nlet px2 = -1;\nlet py2 = -1;\nlet cx, cy;\n\nlet buffer;\nlet frames = [];\n\ns.duration = 1000;\n\nconst calculateFrames = () => {\n  let a1 = PI / 2;\n  let a2 = PI / 2;\n  let a1_v = 0;\n  let a2_v = 0;\n  cx = width / 2;\n  cy = height / 4;\n  \n  frames = [];\n  for (var i = 0; i <= s.duration; i++) {\n    let num1 = -g * (2 * m1 + m2) * sin(a1);\n    let num2 = -m2 * g * sin(a1 - 2 * a2);\n    let num3 = -2 * sin(a1 - a2) * m2;\n    let num4 = a2_v * a2_v * r2 + a1_v * a1_v * r1 * cos(a1 - a2);\n    let den = r1 * (2 * m1 + m2 - m2 * cos(2 * a1 - 2 * a2));\n    let a1_a = (num1 + num2 + num3 * num4) / den;\n  \n    num1 = 2 * sin(a1 - a2);\n    num2 = (a1_v * a1_v * r1 * (m1 + m2));\n    num3 = g * (m1 + m2) * cos(a1);\n    num4 = a2_v * a2_v * r2 * m2 * cos(a1 - a2);\n    den = r2 * (2 * m1 + m2 - m2 * cos(2 * a1 - 2 * a2));\n    let a2_a = (num1 * (num2 + num3 + num4)) / den;\n  \n    let x1 = r1 * sin(a1);\n    let y1 = r1 * cos(a1);\n  \n    let x2 = x1 + r2 * sin(a2);\n    let y2 = y1 + r2 * cos(a2);\n    \n    frames.push({x1, x2, y1, y2, px2, py2});\n    \n    a1_v += a1_a;\n    a2_v += a2_a;\n    a1 += a1_v;\n    a2 += a2_v;\n  \n    px2 = x2;\n    py2 = y2;\n  }\n};\n\nlet sliderR1, sliderR2, sliderM1, sliderM2;\nlet txt;\n\nfunction setup() {\n  size = Math.min(height, width);\n  r1 = size / 7;\n  r2 = r1;\n  m1 = r1 / 7;\n  m2 = m1;\n  g = size / 500;\n  staticText(\"Radius 1\", 10, 10);\n  staticText(\"Radius 2\", 10, 30);\n  staticText(\"Mass 1\", 10, 50);\n  staticText(\"Mass 2\", 10, 70);\n  sliderR1 = cachedSlider('sliderR1', 10, 200, r1).position(90, 10);\n  sliderR2 = cachedSlider('sliderR2', 10, 200, r2).position(90, 30);\n  sliderM1 = cachedSlider('sliderM1', 2, 100, m1).position(90, 50);\n  sliderM2 = cachedSlider('sliderM2', 2, 100, m2).position(90, 70);\n  \n  calculateFrames();\n}\n\nfunction draw (t) {\n  background(0);\n\n  if (r1 != sliderR1.value() || r2 != sliderR2.value() || m1 != sliderM1.value() || m2 != sliderM2.value()) {\n    r1 = sliderR1.value();\n    r2 = sliderR2.value();\n    m1 = sliderM1.value();\n    m2 = sliderM2.value();\n    calculateFrames();\n  }\n\n  const fadingGradient = (_, value, minVal = 0.2, length = s.duration / 5) => {\n    let fraction = Math.max(minVal, 1 - ((t-value) / length));\n    stroke(\n        lerpColor(\n            color('#277DA1'),\n            color('#F76C5E'),\n            fraction,\n        )\n    );\n    strokeWeight(fraction * 3);\n  };\n  \n  const {x1, x2, y1, y2, px2, py2} = frames[floor(t)];\n  \n  translate(cx, cy);\n  stroke('white');\n  strokeWeight(2);\n\n  line(0, 0, x1, y1);\n  fill(0);\n  ellipse(x1, y1, m1, m1);\n\n  line(x1, y1, x2, y2);\n  fill(0);\n  ellipse(x2, y2, m2, m2);\n  \n  if (t >= 1) {\n    plot2D(1, floor(t), (i) => frames[i].x2, (i) => frames[i].y2, {strokeWeight: 2, preVertex: fadingGradient})\n  }\n}\n`;","export const newSketch = `// Untitled\ns.duration = 1000;\np.setup = () => {\n\n};\n\np.draw = () => {\n  p.background(0);\n};\n`;","import React, {useLayoutEffect, useState} from 'react';\nimport SketchCell from \"./SketchUtils/SketchCell\";\nimport './App.css';\nimport EditorCell from \"./Notebook\";\n\nfunction App() {\n  // const code = (p, s) => {\n  //   const setup = () => {\n  //     p.textSize(15);\n  //     p.latex(\"x = \\\\sum_{i=1}^{3} sin(\\\\frac{t}{10i})\", 8, 8);\n  //   };\n  //\n  //   const draw = (t) => {\n  //     p.background(0);\n  //     plot(t);\n  //   };\n  //\n  //   const plot = (t, length= 100, color = '#F76C5E') => {\n  //     p.plot2D(t, length, x1, y1_, color, 3);\n  //   }\n  //\n  //   const x1 = (t) => {\n  //     // return t;\n  //     let scale = s.width / 10;\n  //     return s.width / 2 + scale * (p.sin(t/10) + p.sin(t/20) + p.sin(t/30));\n  //   }\n  //\n  //   const y1_ = (t) => {\n  //     return s.height - y1(t);\n  //   }\n  //\n  //   const y1 = (t) => {\n  //     // return t;\n  //     let scale = s.width / 10;\n  //     return s.height / 2 + scale * (p.cos(t / 10) + p.cos(t / 20) + p.cos(t / 30));\n  //   }\n  //   return {setup, draw};\n  // };\n\n  function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n  }\n\n  const [width, height] = useWindowSize();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<SketchCell*/}\n        {/*  height={200}*/}\n        {/*  width={200}*/}\n        {/*  code={code}*/}\n        {/*  rate={2}*/}\n        {/*/>*/}\n        {width && <EditorCell height={height} width={width} updateOnChange={true} />}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter hashType={\"noslash\"}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}